import React, { ChangeEvent, useState } from 'react'
import Head from 'next/head'
import LinearProgress from '@mui/material/LinearProgress';
import CopyAllIcon from '@mui/icons-material/CopyAllRounded';
import FormControl from '@mui/material/FormControl';
import TextField from '@mui/material/TextField';

export default function Add() {
  const [form, setForm] = useState({
    name: '',
    description: '',
    disabled: false
  });
  const [link, setLink] = useState('');
  const [progress, setProgress] = useState(20);

  const create = () => {
    const name = form.name;
    const parsedName = name.toLowerCase().replace(/[^A-Z0-9]+/ig, "_");
    const copyLink = `${window.location.href}${parsedName}/fund`
    setLink(copyLink);

    let _form: any = {...form}
    _form.disabled = true;
    setForm(_form);
    setProgress(85)
  }
  const copyToClipboard = () => {
    if (link.length > 0) {
      navigator.clipboard.writeText(link)
    }
  }

  const updateForm = (value: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, field: string) => {
    if (field === 'name') setProgress(35)
    if (field === 'description') setProgress(50)
    let _form: any = {...form}
    _form[field] = value.target.value
    setForm(_form)
  }

  return (
    <div className="h-screen min-h-screen flex bg-white">
      <Head>
        <title>Fundbox app</title>
        <meta name="description" content="Generated by Fundbox app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='w-full flex flex-col'>
        <div className='w-full mt-10 mb-6 flex items-center justify-center'>
          <LinearProgress
            variant="determinate"
            value={progress}
            className='w-1/2 h-2 rounded'
          />
        </div>

        <div className='flex flex-1 flex-col items-center'>
          <div className=''>
            <h1 className='text-dark_blue-100 text-4xl text-center font-semibold tracking-[-1px]'>Welcome, xurro</h1>
            <p className='text-dark_blue-80 text-lg text-center'>Enter required fund details below.</p>
          </div>

          <div className='w-full p-6 mt-6 mx-6'>
            <FormControl className='mt-4' fullWidth>
              <TextField 
                id="outlined-basic" 
                label="Name"
                variant="outlined"
                type='text'
                onChange={(e) => updateForm(e, 'name')}
                disabled={form.disabled}
              />
            </FormControl>

            <FormControl className='mt-4' fullWidth>
              <TextField 
                id="outlined-basic" 
                label="Description"
                variant="outlined"
                type='text'
                onChange={(e) => updateForm(e, 'description')}
                disabled={form.disabled}
              />
            </FormControl>

            {link && (
              <div className='bg-light-100 h-28 rounded-3xl mt-5 p-4 flex items-center'>
                <div className='mr-2 flex-1'>
                  <h4 className='text-dark_blue-100 font-medium text-[15px] break-all'>Copy and share link with contributors!</h4>
                  <p className='text-grey_sub_text break-all text-[15px]'>{link}</p>
                </div>
                <button onClick={() => copyToClipboard()} className=''>
                  <CopyAllIcon className='text-dark_blue-100' />
                </button>
              </div>
            )}
          </div>
          <div className='w-full px-6 my-5 mt-20'>
            <button
              className='bg-blue-100 w-full h-14 rounded-2xl text-white font-medium leading-6 tracking-[-0.3px] disabled:opacity-50'
              disabled={form.disabled}
              onClick={() => create()}
            >Create fund</button>
          </div>
        </div>
      </main>
    </div>
  )
}
