package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.32

import (
	"context"
	"fmt"
	"getting-to-go/graph/generated"
	models "getting-to-go/model"

	"github.com/google/uuid"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input generated.NewUser) (*models.User, error) {
	return r.UserService.CreateUserFromInput(input)
}

// StartFund is the resolver for the startFund field.
func (r *mutationResolver) StartFund(ctx context.Context, input *generated.NewFund) (*models.Fund, error) {
	panic(fmt.Errorf("not implemented: StartFund - startFund"))
}

// Contribute is the resolver for the contribute field.
func (r *mutationResolver) Contribute(ctx context.Context, fundID uuid.UUID, input generated.NewContribution) (*models.Contribution, error) {
	panic(fmt.Errorf("not implemented: Contribute - contribute"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
